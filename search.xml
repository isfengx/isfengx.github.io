<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[你不是真的快乐]]></title>
    <url>%2F2017%2F09%2F08%2F%E4%BD%A0%E4%B8%8D%E6%98%AF%E7%9C%9F%E7%9A%84%E5%BF%AB%E4%B9%90%2F</url>
    <content type="text"><![CDATA[人群中 哭着 你只想变成透明的颜色你再也不会梦 或痛 或心动了你已经决定了 你已经决定了 你 静静 忍着 紧紧把昨天在拳心握着而回忆越是甜 就是 越伤人了越是在 手心留下 密密麻麻 深深浅浅的刀割 你不是真正的快乐你的笑只是你穿的保护色你决定不恨了也决定不爱了把你的灵魂 关在永远 锁上的躯壳 这世界笑了 于是你合群的一起笑了当生存是规则 不是 你的选择于是你 含着眼泪 飘飘荡荡 跌跌撞撞的走着 你不是真正的快乐你的笑只是你穿的保护色你决定不恨了 也决定不爱了把你的灵魂 关在永远 锁上的躯壳 你不是真正的快乐你的伤从不肯完全的愈合我站在你左侧 却像隔着银河难道就真的 抱着遗憾 一直到老了然后才后悔着 你值得真正的快乐你应该脱下你穿的保护色为什么失去了 还要被惩罚呢能不能就让 悲伤全部 结束在此刻重新开始活着 —— 五月天·后青春期的诗]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>五月天</tag>
        <tag>诗与歌</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[表裹一体]]></title>
    <url>%2F2017%2F09%2F04%2F%E8%A1%A8%E8%A3%B9%E4%B8%80%E4%BD%93%2F</url>
    <content type="text"><![CDATA[貪戀著清晨 宣洩著黑夜如此生存乃我的本性翻騰激揚的這份感情究竟是白 抑或是黑 嚮往的未來 以及棄置於背後的過去糾結扭曲 一層又一層地 緊緊纏繞逐漸消逝的命運螺旋 我覷眼細細查看從不可思議的夢裏 探出身來 表裏一体 指尖拋彈出的硬幣 在空中旋轉飛舞而我究竟 在祈求著 何種結局表裏一体 光芒越是耀眼 黑影越是陰暗如此一來 又該往何處去重疊交錯的 這兩種 未來 Woo-woo- 欺騙是偶然也是必然相連的岔道上無論何時 無處不在緊追隨而來的影子 該將其吞沒嗎 還是將其照亮是該选择抗拒 還是原諒一切 光明黑暗愛情憎惡抱持著同根而出強韌的情感 在記憶的另一端 伸出手來悄悄地受吸引 前往有你的地方 表裡如一 明知命中註定一切都將消失因此 絕對不會放開這隻手的盛者必衰 染上鮮血 緋紅的沖動切斷鎖鏈 甦醒的現在去見證吧 真實的世界 在陰陽的縫隙之間聆聽心的悸動點與線 相連而繫仿彿時光消逝的安魂曲 表裡如一 指間彈起的硬幣 飛舞在空中我到底 在祈願著哪邊的終結表裡如一 光芒越是耀眼 黑影越是陰暗就連未曾消失的過去 都無法移開視線 定睛凝視 消逝的螺旋眨眼的瞬間 光與影交疊索性就這樣 點綴著時辰 重疊共生的 兩個未來 Woo-woo- —— HUNTER×HUNTER]]></content>
      <tags>
        <tag>全职猎人</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[防火墙报错 ERROR: problem running ip6tables]]></title>
    <url>%2F2017%2F09%2F02%2F%E9%98%B2%E7%81%AB%E5%A2%99%E6%8A%A5%E9%94%99-ERROR-problem-running-ip6tables%2F</url>
    <content type="text"><![CDATA[今天突然发现ss-libev不行了，而且这台机器上的原版shadosocks端口似乎也又抽风了（因为几周前这个python版的ss有过端口被封前科，只是在换了端口后又可以愉快X墙^^），怀疑是防火墙的问题，就跑去vps上瞧了下 12sudo ufw statusERROR: problem running ip6tables wtf…… 这个ip6是默认开启的，之前都管它怎么这会突然来搞事了？ 对于这种情况，谷歌上有人说可以关闭ip6试试，好吧试试就试试 1sudo vi /etc/default/ufw 把 IPV6=yes 改为 IPV6=no 具体出了啥问题还不清楚，不过这招确实管用。。。 又试了下，把ip6打开，果然还是不行。。 不死心后面在关闭ip6的前提下，把ufw关闭又重启来回折腾了几次甚至还 reboot 重启了下机器，再去关闭ip6， 测试 1sudo ufw status 居然就正常了。。 真的好了。 完 额 O__O “… 今天 (9.3) 一看ufw就又回去了，记得好像中途重启过一次机器 12sudo ufw statusERROR: problem running ip6tables 这个情况虽然有点莫名其妙，不过有一点可以确定的是这个ufw ip6问题会影响到原版ss端口连接（某些端口可以正常连接而另外一些端口却不行），还有docker上的ss-libev也受影响不运作了 我记得昨天调好这个问题后，确定是关了防火墙的 1sudo ufw diable 今天一看又出了问题，在关闭ip6后查看防火墙状态 1sudo ufw status ufw居然莫名又开了。。猜测还是那一个隐藏的bug影响了防火墙，部分端口被关闭，遂导致相关端口上的应用挂了。。 最后老老实实关了ip6，再关了ufw，果然，ss-libev正常了，原来受影响某些端口不能连接的ss-python也可以了。。 折腾了这么久，对于这种情况，我只想说两个字—— wo艹]]></content>
  </entry>
  <entry>
    <title><![CDATA[停滞]]></title>
    <url>%2F2017%2F08%2F26%2F%E5%81%9C%E6%BB%9E%2F</url>
    <content type="text"><![CDATA[我经历极其停滞的阶段。在这里，我并不是说我像大多数人那样，花费上一天又一天的时间写明信片，去回应什么人写给我的快函。我也不是说我像其他一些人那样，可以轻易地无限期推迟一些可被证明有用于我的事情，或者是可以给予我快乐的事情。我对自己的误解比这些要小得多。我是灵魂停滞了。我受害于一种意志的悬置，与此同时，感情和思想却天天在持续。我只能向别人表达自己，然后以语言，以行动，以习惯，在勃勃繁育的灵魂生活里，通过他们向自己作自我表达。 在这些影子般的时间里，我不能思想、感受或者愿望。我设法写下来的东西，只有数字或者仅仅是笔的停顿。我一无所感，甚至我所爱之人的死亡，似乎也会远远离我而去，成为一件用外语发生的事件。我也一无所为，就像我在睡觉，我的语言、姿势以及举动，仅仅是一种表面的呼吸，是一些器官按部就班的本能。于是日子和日子过去了，这些加起来的日子是我的多少生命，我说不清楚。我最终把停滞当成一件衣装脱下的时候，我想我不会像自己的想象中那样赤裸地站着，一些无形的外衣将会一直包装着我，遮掩我真正灵魂的永远缺席。我突然想到这一切，我的思想、感受以及愿望，也许是一种停滞的形式，是我更为个性化的思维方式和自己更为熟悉的感觉，是一个意志的失落之处——在那个迷宫里，我才真正成为自己。 无论这是不是真理，我都会听其自然。无论上帝和女神是否存在，我都会交出实在的我，听从任何一个送达而来的命运，听从任何一个提供与我的机会，对已经食言于我的许诺无限忠诚。]]></content>
      <tags>
        <tag>惶然录</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ssh公钥登录]]></title>
    <url>%2F2017%2F08%2F20%2Fssh%E5%85%AC%E9%92%A5%E7%99%BB%E5%BD%95%2F</url>
    <content type="text"><![CDATA[ssh登录考虑到直接使用密码登录不安全 ssh公钥登录被拒使用公钥登录，即使把公钥上传到相应平台后，通过公钥ssh登录（通常第一次）还是会被拒，显示 1Permission denied (publickey) 解决方法：将对应的ssh key加入系统 ssh，终端执行： 1ssh-add ~/.ssh/xxx 注：其中xxx为你ssh-key的文件夹名 知乎：ssh登录提示Permission denied (publickey)]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux下关于root/sudo的一些权限问题]]></title>
    <url>%2F2017%2F08%2F15%2Flinux%E4%B8%8B%E5%85%B3%E4%BA%8Eroot%3Asudo%E7%9A%84%E4%B8%80%E4%BA%9B%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[赋予普通用户sudo权限打开 /etc/sudoers 文件加入下面一行 1your_user_name ALL=(ALL) ALL 默认5分钟后刚才输入的sodo密码过期，下次sudo需要重新输入密码，如果觉得在sudo的时候输入密码麻烦，把刚才的输入换成如下内容即可： 1your_user_name ALL=(ALL) NOPASSWD: ALL 更改sudoers权限报错 vi /etc/sudoers 的时候发现提示说没有权限，即使使用了sudo也是readonly 打印一看原来文件的属性是只读的 1-r--r----- 1 root wheel 2299 Aug 23 2015 sudoers 于是使用chmod 644 sudoers改写了文件的读写权限。可这样会带来一个问题，使用 sudo命令比如 apt update 就会报以下错误： 12345sudo: /etc/sudoers is world writablesudo: no valid sudoers sources found, quittingsudo: unable to initialize policy plugin 解决办法是su root切换到 root 执行以下指令（一定要切换root不然会提示说需要super user权限） 123pkexec chmod 555 /etc/sudoerspkexec chmod 555 /etc/sudoers.d/README 将sudoers的权限还原锁定即可。 关于sudo的一个警告如果你更改了主机名，这时候 sudo 命令虽然正常可用，但会报这样一个警告 sudo: unable to resolve host 看起来很不爽 打开 /etc/hosts，在localhost 的下一行加上你的主机名就好了 123127.0.0.1 localhost 127.0.0.1 your_host_name]]></content>
  </entry>
  <entry>
    <title><![CDATA[看4K视频所需的带宽]]></title>
    <url>%2F2017%2F08%2F15%2F%E7%9C%8B4K%E8%A7%86%E9%A2%91%E6%89%80%E9%9C%80%E7%9A%84%E5%B8%A6%E5%AE%BD%2F</url>
    <content type="text"><![CDATA[理论计算12345674k (3840*2160): 3840*2160*8*3*60 ≈ 12 Gbps2k (2560*1600): 2560*1440*1440 ≈ 5.3 G1080p (1920*1080): 1920*1080*1440 ≈ 3 G720p: 1280*720*1440 ≈ 1.3 G （ 简单取值 1G≈1000M≈1000 000k） 对于4K视频： 一整屏像素的点数(屏幕长宽)为3840*2160 一个点需要rgb 3种颜色，一个颜色值8位，(颜色值范围：0~255=2^8 ) 一秒钟60帧 12G —— 即表示4K视频在一秒钟所需传输的数据量 实际估测由于当前大部分视频所采取的编码为H.265，其标准压缩比：350~1000 所以对应视频所需的带宽大致为： 12345674K: 12~40M2K: 5~15M1080p: 3~8M720p: 0.4M~1.3M 如果你家里的带宽有40M，那就可以顺畅看4K了。这个40M是指理论峰值，考虑到国内的视频清晰度经常挂羊头卖狗肉（比如拿720p冒充1080p…），实际上可能一半带宽（20M）就差不多了，稍稍卡顿的话可以缓冲一下。 在线播放 4K 内容的需要多少带宽？（知乎） 理论计算（数据未压缩） 4K显示屏对应的解析度：3840*2160 4K内容需要的传输速率：384021608360≈12 Gbps （前提：不考虑数据中的其他信号；数据位数为8 bits/color；帧率为60fps） \2. 理论计算（数据压缩后） H.265标准的压缩比：350~1000 4K内容需要的传输速率（H.265标准压缩后）：12~40 Mbps \3. 实际数值 1) 各国4K内容现场试验中的传输速率：17.5~35 Mbps（H.265压缩标准下） 2) Netflix 4K: ≥20 Mbps （H.265压缩标准下） 3) Youtube 4K: ≥25 Mbps （VP9压缩标准下） 感谢@郭泽宇的指正 4) LG 4K: 15.6 Mbps （推测同样为H.265压缩标准） 备注1：相同的现实效果下，H.265 (或称HEVC)的压缩比是H.264 (或称AVC)的2倍左右。 备注2：带宽的单位为bps（即bit/s），如1M带宽对应的传输速度1Mbps。]]></content>
  </entry>
  <entry>
    <title><![CDATA[hexo · markdown样式]]></title>
    <url>%2F2017%2F08%2F10%2Fhexo%20markdown%E6%A0%B7%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[在文档中增加图标 支持MarkdownHexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。 一件部署只需一条指令即可部署到Github Pages，或其他网站 丰富的插件Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。 123456- &lt;i class="fa fa-pencil"&gt;&lt;/i&gt;支持Markdown&lt;i&gt;Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。&lt;/i&gt;- &lt;i class="fa fa-cloud-upload"&gt;&lt;/i&gt;一件部署&lt;i&gt;只需一条指令即可部署到Github Pages，或其他网站&lt;/i&gt;- &lt;i class="fa fa-cog"&gt;&lt;/i&gt;丰富的插件&lt;i&gt;Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。&lt;/i&gt; &lt;i class=&quot;fa fa-github&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa fa-github fa-lg&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fa fa-github fa-2x&quot;&gt;&lt;/i&gt; 采用的是Font Awesome的图标。 图形边框效果 Download Now 12&lt;a id="download" href="https://git-scm.com/download/win"&gt;&lt;i class="fa fa-download"&gt;&lt;/i&gt;&lt;span&gt; Download Now&lt;/span&gt;&lt;/a&gt; 这也是调用了Font Awesome的方法。 诗歌居中1234567891011请不要相信我的美丽也不要相信我的爱情在涂满了油彩的面容之下我有的是颗戏子的心所以 请千万不要不要把我的悲哀当真也别随着我的表演心碎亲爱的朋友 今生今世我只是个戏子永远在别人的故事里流着自己的泪 戏子 请不要相信我的美丽也不要相信我的爱情在涂满了油彩的面容之下我有的是颗戏子的心所以 请千万不要不要把我的悲哀当真也别随着我的表演心碎亲爱的朋友 今生今世我只是个戏子永远在别人的故事里流着自己的泪 12简单居中 &lt;center&gt;戏子&lt;/center&gt;另一种 &#123;% cq %&#125; 戏子 &#123;% endcq %&#125; 戏子 戏子 请不要相信我的美丽 也不要相信我的爱情 在涂满了油彩的面容之下 我有的是颗戏子的心 所以 请千万不要 不要把我的悲哀当真 也别随着我的表演心碎 亲爱的朋友 今生今世 我只是个戏子 永远在别人的故事里 流着自己的泪 图片居中123&lt;div align = center&gt;——&gt;&gt;图片url&lt;/div&gt;]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[oh my zsh]]></title>
    <url>%2F2017%2F08%2F10%2Foh-my-zsh%2F</url>
    <content type="text"><![CDATA[#test 1oh my zsh]]></content>
  </entry>
  <entry>
    <title><![CDATA[Pin]]></title>
    <url>%2F2017%2F08%2F10%2FPin%2F</url>
    <content type="text"><![CDATA[Pin 是一个很新奇的iOS App，有点遗憾，用了这么久了以前却只都把它当做一个简单的复制粘贴板来用，今天才发现里面各种有趣实用的功能。Twitter上看见作者说是已经在内测3.0了，这次大版本增加了JS插件实现热插拔，以后所有新增的功能都通过插件完成。有点类似workflow，或许可以做成的功能平台，很期待。 详细使用介绍，留坑。。 1 2 3 title1this is a block block www.google.com google wang wangxunfeng txt]]></content>
      <tags>
        <tag>iOS App</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[nginx 制作谷歌镜像]]></title>
    <url>%2F2017%2F08%2F02%2Fnginx-%E5%88%B6%E4%BD%9C%E8%B0%B7%E6%AD%8C%E9%95%9C%E5%83%8F%2F</url>
    <content type="text"><![CDATA[失败O..O以前还不习惯翻墙的时候，想查点资料都是去网上找别人的谷歌镜像用，现在有了自己的服务器也好想做个自己的镜像。以为很简单然而搞了一整天还是不行。。。网上的教程似乎都点问题，不怎么靠谱 再试一试，还不行就先放下吧。 留坑]]></content>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo小记]]></title>
    <url>%2F2017%2F07%2F31%2Fhexo%20%E5%B0%8F%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[修改文章默认模板 hexo/scaffolds/post.md 博客中使用到的插件包 hexo/package.json。哎，这个文件里居然不能写注释，像下面这样一写就报错。。。 可使用 npm ls --depth 0 来排查 123456789101112131415161718192021222324252627282930313233&#123; "name": "hexo-site", "version": "0.0.0", "private": true, "hexo": &#123; "version": "3.3.7" &#125;, "dependencies": &#123; "hexo": "^3.2.0", "hexo-admin": "^2.2.1", //简单后台管理 "hexo-algolia": "^1.1.0", // algolia搜索 "hexo-deployer-git": "^0.3.0", //git部署 "hexo-deployer-rsync": "^0.1.3", // 远程同步上传 "hexo-fs": "^0.2.1", //文件相关，去除为函数未调用警告 "hexo-generator-archive": "^0.1.4", //文章归档 "hexo-generator-baidu-sitemap": "^0.1.2", //百度站点地图 "hexo-generator-category": "^0.1.3", //文章分类 "hexo-generator-feed": "^1.2.0", //RSS订阅 "hexo-generator-index": "^0.2.1", //首页配置 "hexo-generator-searchdb": "^1.0.7", //本地搜索 "hexo-generator-sitemap": "^1.2.0", //谷歌站点地图 "hexo-generator-tag": "^0.2.0", //生成文章页面 "hexo-helper-post-top": "0.0.1", // 文章置顶 "hexo-reference": "^1.0.3", //添加注脚 "hexo-renderer-ejs": "^0.2.0", "hexo-renderer-marked": "^0.2.10", "hexo-renderer-stylus": "^0.3.1", "hexo-server": "^0.2.0", //本地预览 "hexo-tag-aplayer": "^2.0.1", //插入音乐 "hexo-tag-dplayer": "^0.1.7", //插入视频 "hexo-wordcount": "^3.0.2" //统计字数 &#125;&#125; 每次写完新文章，发布都需要执行下面几步： 123hexo -c // clean 清除缓存hexo -d // deploy 远程部署hexo -g // generator 生成页面 即使综合起来一条命令 1hexo clean &amp;&amp; hexo d -g 感觉这样还是太繁琐了点，还想z再简化一下，咋办——使用alias取个简单别名 打开或创建文件：vi ~/.bash.profile 写入：alias &#39;hexo-cdg&#39;=&#39;hexo clean &amp;&amp; hexo d -g&#39; 重新加载： source ~/.bash.profile 下次发布新文章就直接在hexo目录下执行 hexo-cdg Ubuntu下的 alias 系统别名 usr/share/base-files/.bash_aliases]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo成功迁移到自由域名]]></title>
    <url>%2F2017%2F07%2F29%2Fhexo%E6%88%90%E5%8A%9F%E8%BF%81%E7%A7%BB%E5%88%B0%E8%87%AA%E7%94%B1%E5%9F%9F%E5%90%8D%2F</url>
    <content type="text"><![CDATA[在搞HTTPS证书，，坑好多。。。 —— 7.30 弄完了，acme真是个好东西]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo搬迁到自由域名]]></title>
    <url>%2F2017%2F07%2F28%2Fnew-test%2F</url>
    <content type="text"><![CDATA[测试，hexo搬迁到自有域名 test …..]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>Ubuntu</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo添加音乐、视频 (置顶test)]]></title>
    <url>%2F2017%2F07%2F24%2Fhexo%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90%E3%80%81%E8%A7%86%E9%A2%91%2F</url>
    <content type="text"><![CDATA[暴力方式添加音乐、视频因为markdown语法兼容html，所以一种简单的方法就是直接使用HTML嵌入 插入音乐去网易云音乐网站上找喜欢的歌，然后选择生成外链播放。下面这段代码就是由网易云上直接外链生成的（设置auto=1为自动播放）： 123&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=147030&amp;auto=0&amp;height=66"&gt;&lt;/iframe&gt; 插入视频和音乐类似视频也可以，像这个就是从YouTube视频上直接趴下来插入文本的 123&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=147030&amp;auto=1&amp;height=66"&gt;&lt;/iframe&gt; 自定义使用APlayer、DPlayer方式添加APlayer 和 DPlayer 是两款插件基于 DIYgod 的 html5 播放器 对应hexo下的两款插件分别是 hexo-tag-aplayer 和 hexo-tag-dplayer 音乐插件APlayercd到hexo目录下安装音乐播放插件 hexo-tag-aplayer 1npm install hexo-tag-aplayer --save usage: 1&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125; title : music title author: music author url: music file url picture_url: optional, music picture url narrow: optional, narrow style autoplay: optional, autoplay music, not supported by mobile browsers width:xxx: optional, prefix width:, player’s width (default: 100%) lrc:xxx: optional, prefix lrc:, LRC file url 用例: 1&#123; % aplayer "耿耿于怀" "麦浚龙" "http://ot8me0b2r.bkt.clouddn.com/%E9%BA%A6%E6%B5%9A%E9%BE%99%20-%20%E8%80%BF%E8%80%BF%E4%BA%8E%E6%80%80.mp3" "autoplay" % &#125; new APlayer({ element: document.getElementById("aplayer0"), narrow: false, autoplay: false, showlrc: 0, music: { title: "耿耿于怀", author: "麦浚龙", url: "https://www.jianguoyun.com/p/DZbLl0AQsZL1BRiOqjE", pic: "", } }); https://is.gd/4mexy3 ##视频插件DPlayer 安装视频播放插件 hexo-tag-dplayer 1npm install hexo-tag-dplayer --save usage: 1&#123;% dplayer key=value ... %&#125; key can be 1234567891011121314151617'autoplay': autoplay video, not supported by mobile browsers'theme': theme color, default: #b7daff'loop': loop play music, default: true'lang': language, `zh` for Chinese, `en` for English, default: Navigator language'screenshot': enable screenshot function, default: false, NOTICE: if set it to true, video and video poster must enable Cross-Origin'hotkey': binding hot key, including left right and Space, default: true'preload': 'auto', the way to load music, can be 'none' 'metadata' 'auto', default: 'auto''url': Required, video url'pic': video cover picture'api': DPlayer danmaku backend url'addition': Dplayer danmuku for bilibili 'id': see https://github.com/DIYgod/DPlayer'token': see https://github.com/DIYgod/DPlayer'maximum': maximum quantity of danmaku'width' maximum width of the dplayer wraper'height' maximum height of the dplayer wraper, you can use this like "height=233px" for example: 1234567891011121314&#123;% dplayer "url=http://devtest.qiniudn.com/若能绽放光芒.mp4" "addition=https://dplayer.daoapp.io/bilibili?aid=4157142" "api=http://dplayer.daoapp.io" "pic=http://devtest.qiniudn.com/若能绽放光芒.png" "id=9E2E3368B56CDBB4" "loop=yes" "theme=#FADFA3""autoplay=false" "token=tokendemo" %&#125;&#123;% dplayer "url=http://devtest.qiniudn.com/若能绽放光芒.mp4" "addition=https://dplayer.daoapp.io/bilibili?aid=4157142" "api=http://dplayer.donot.help/dplayerpy" "pic=http://devtest.qiniudn.com/若能绽放光芒.png" "id=2622668" "loop=yes" "theme=#FADFA3" "autoplay=false" "width=233px" %&#125; 1234&#123;% raw %&#125;&lt;div id="player1" class="dplayer"&gt;&lt;/div&gt;&lt;script src="dist/DPlayer.min.js"&gt;&lt;/script&gt;&lt;https://www.jianguoyun.com/p/DXP2S1YQsZL1BRj3qTE&#123;% endraw %&#125;]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[markdown test]]></title>
    <url>%2F2017%2F07%2F24%2Fmarkdown-test%2F</url>
    <content type="text"><![CDATA[title1title2title3 sdfdfdfdfdf dfdfdf dddd fffff wang first two three wang xun feng wangxunfeng wangxunfeng wang 123wangxunfeng this is mk wangddfdfdfdffdf ### link: &lt;https://google.com&gt; https://google.com [google](https://google.com) google]]></content>
  </entry>
  <entry>
    <title><![CDATA[逃离]]></title>
    <url>%2F2017%2F07%2F19%2Ftest2%2F</url>
    <content type="text"><![CDATA[我希望能够远走，逃离我的所知，逃离我的所有。我想出发，去任何地方，不论是村庄或者荒原，只要不是这里就行。我向往的只是不再见到这些人，不再过这种没完没了的日子。我想做到的，是卸下我已习惯的伪装，成为另一个我，以此得到喘息。不幸的是，我在这些事情上从来都事与愿违。 ——佩索阿《惶然录》 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429430431432433434435436437438439440441442443444445446447448449450451452453454455456457458459460461462463464465466467468469470471472473474475476477478479480481482483484485486487488489490491492493494495496497498499500501502503504505506507508509510511512513514515516517518519520521522523524525526527528529530531532533534535536537538539540541542543544545546547548549550551552553554555556557558559560561562563564565566567568569570571572573574575576577578579580581582583584585586587588589590591592593594595596597598599600601602603604605606607608609610611612613614615616617618619620621622623624625626627628629630631632633634635636637638639640641642643644645646647648649650651652653654655656657658659660661662663664665666667668669670671672673674675676677678679680681682683684685686687688689690691//// AppDelegate.m// DDULearn//// Created by hxed on 2017/2/16.// Copyright © 2017年 WangXunfeng. All rights reserved.//#import "AppDelegate.h"#import &lt;AMapFoundationKit/AMapFoundationKit.h&gt;#import &lt;RongIMKit/RongIMKit.h&gt;#import "IQKeyboardManager.h"#import "MMDrawerController.h"#import "UXMainViewController.h"#import "UXiCenterVC.h"#import "UXRightVC.h"#import "SDWebImageManager.h"#import "UXTestChatViewController.h"#ifdef NSFoundationVersionNumber_iOS_9_x_Max#import &lt;UserNotifications/UserNotifications.h&gt;#endif// 引入JPush功能所需头文件#import "JPUSHService.h"// iOS10注册APNs所需头文件#ifdef NSFoundationVersionNumber_iOS_9_x_Max#import &lt;UserNotifications/UserNotifications.h&gt;#endif// 如果需要使用idfa功能所需要引入的头文件（可选）#import &lt;AdSupport/AdSupport.h&gt;// 融云SDKstatic NSString * const RongYun_Key = @"6tnym1br6ggu7";static NSString * const RongYun_Secret = @"0KD08XfVd4c";// 高德SDKstatic NSString * const GaoDeMap_Key = @"93d41a79fc16d0547e4aab4b666f4ef7";// Jpushstatic NSString * const Jpush_Key = @"fc769e9cabf9c93cd934f357";NSString * RongYun_Token = @"oxVWw30bJDVDK6w86pzUjnpI92qiwflHGcNlXpMjR5OgQl65rAZZmJECboP7i7W4Rwsa8KU7gJU=";//static NSString * const RongYun_Key = @"6tnym1br6ggu7";//static NSString * const RongYun_Secret = @"0KD08XfVd4c";#pragma mark 自己申请//static NSString * const RongYun_Token = @"yPCseovW+OFtWuCqY4p+z6VDl2pMzSpFrURFGlPagKIM+qjDZZ1RqM03OeQE1xmUdyk2oHaS7EgUxS0VDXU8LTm06Yzc6HA6";//static NSString * const RongYun_Key = @"6tnym1br6gbv7";//static NSString * const GaoDeMap_Key = @"93d41a79fc16d0547e4aab4b666f4ef7";@interface AppDelegate () &lt;RCIMUserInfoDataSource, RCIMReceiveMessageDelegate, UNUserNotificationCenterDelegate, JPUSHRegisterDelegate&gt;&#123; UIView * _navBackView;&#125;@property(nonatomic,strong) MMDrawerController * drawerController;@end@implementation AppDelegate- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions &#123; [self setRootViewController]; [self setNavBar]; [self configSDK]; [self registerLogin]; [self registerNotificationOnApplication:application]; // JPush 推送 JPUSHRegisterEntity * entity = [[JPUSHRegisterEntity alloc] init]; entity.types = JPAuthorizationOptionAlert|JPAuthorizationOptionBadge|JPAuthorizationOptionSound; if ([[UIDevice currentDevice].systemVersion floatValue] &gt;= 8.0) &#123; // 可以添加自定义categories // NSSet&lt;UNNotificationCategory *&gt; *categories for iOS10 or later // NSSet&lt;UIUserNotificationCategory *&gt; *categories for iOS8 and iOS9 [[UNUserNotificationCenter currentNotificationCenter] setNotificationCategories:[self createNotificationCategoryActions]]; &#125; [JPUSHService registerForRemoteNotificationConfig:entity delegate:self]; // Optional // 获取IDFA // 如需使用IDFA功能请添加此代码并在初始化方法的advertisingIdentifier参数中填写对应值 NSString *advertisingId = [[[ASIdentifierManager sharedManager] advertisingIdentifier] UUIDString]; // Required // init Push // notice: 2.1.5版本的SDK新增的注册方法，改成可上报IDFA，如果没有使用IDFA直接传nil // 如需继续使用pushConfig.plist文件声明appKey等配置内容，请依旧使用[JPUSHService setupWithOption:launchOptions]方式初始化。 [JPUSHService setupWithOption:launchOptions appKey:Jpush_Key channel:nil apsForProduction:NO advertisingIdentifier:advertisingId]; return YES;&#125;- (void)test &#123; [self configRongYunSDK]; self.window.rootViewController = [[UINavigationController alloc] initWithRootViewController:[UXTestChatViewController new]]; &#125;- (void)setRootViewController &#123; UINavigationController * mainNav = [[UINavigationController alloc] initWithRootViewController:[UXMainViewController new]]; UIView * statuesBar = [[UIView alloc] initWithFrame:CGRectMake(0, -20, WFKScreenWidth, 20)]; statuesBar.backgroundColor = [UIColor whiteColor]; UINavigationController * leftNav = [[UINavigationController alloc] initWithRootViewController:[[UXiCenterVC alloc] init]]; // UINavigationController * rightNav = [[UINavigationController alloc] initWithRootViewController:[WFTestVC new]]; // [leftNav.navigationBar addSubview:statuesBar]; self.drawerController = [[MMDrawerController alloc] initWithCenterViewController:mainNav leftDrawerViewController:leftNav rightDrawerViewController:nil]; self.drawerController.maximumLeftDrawerWidth = WFKScreenWidth*0.6; //4、设置打开/关闭抽屉的手势 self.drawerController.openDrawerGestureModeMask = MMOpenDrawerGestureModeAll; self.drawerController.closeDrawerGestureModeMask =MMCloseDrawerGestureModeAll; self.navigationVC = mainNav; self.window = [[UIWindow alloc]initWithFrame:[UIScreen mainScreen].bounds]; [self.window setRootViewController:self.drawerController]; [self.window makeKeyAndVisible];&#125;/** 设置导航栏 */- (void)setNavBar &#123; // 设置左右按钮的颜色 [[UINavigationBar appearance] setTintColor:[UIColor blackColor]]; // 修改导航条的背景色 [[UINavigationBar appearance] setBarTintColor:[UIColor whiteColor]]; [UINavigationBar appearance].backgroundColor = [UIColor whiteColor]; // [[UINavigationBar appearance] setBackgroundImage:[UIImage imageNamed:@"navbar_bg_image"] forBarMetrics:UIBarMetricsDefault]; [[UINavigationBar appearance] setShadowImage:[[UIImage alloc] init]]; NSDictionary * attributesDic = @&#123;NSForegroundColorAttributeName:[UIColor blackColor], NSFontAttributeName:[UIFont systemFontOfSize:16] &#125;; // 修改中间title的属性 [[UINavigationBar appearance] setTitleTextAttributes:attributesDic]; [[UINavigationBar appearance] setBarStyle:UIBarStyleDefault]; // 设置状态栏样式 [UIApplication sharedApplication].statusBarStyle = UIStatusBarStyleDefault; // self.navigationController.navigationBar.barStyle = UIBarStyleBlack; &#125;- (void)configSDK &#123; // 自动适应弹出键盘 [[IQKeyboardManager sharedManager] setCanAdjustTextView:YES]; [[IQKeyboardManager sharedManager] setShouldResignOnTouchOutside:YES]; // 高德地图 SDK [AMapServices sharedServices].apiKey = GaoDeMap_Key; // 配置融云SDK // [self configRongYunSDK];&#125;// 配置融云SDK- (void)configRongYunSDK&#123; UXUserInfo * user = [NSKeyedUnarchiver unarchiveObjectWithFile:KUserFile]; NSLog(@"user: %@",user); [RCIM sharedRCIM].portraitImageViewCornerRadius = 0; [[RCIM sharedRCIM] initWithAppKey:RongYun_Key]; if (!user.cloudToken) &#123; user.cloudToken = RongYun_Token; &#125; NSLog(@"token: %@",user.cloudToken); [[RCIM sharedRCIM] disconnect:YES]; [[RCIM sharedRCIM] setEnableMessageAttachUserInfo:YES]; [[RCIM sharedRCIM] connectWithToken:user.cloudToken success:^(NSString *userId) &#123; [[RCIM sharedRCIM] setEnableMessageRecall:YES]; [[RCIM sharedRCIM] setReceiveMessageDelegate:self]; [[RCIM sharedRCIM] setUserInfoDataSource:self]; RCUserInfo * userInfo = [[RCUserInfo alloc] init]; userInfo.userId = userId; userInfo.name = user.nickName; userInfo.portraitUri = user.headImg; [[RCIM sharedRCIM] setCurrentUserInfo:userInfo]; NSLog(@"登陆成功。当前登录的用户ID：%@", userId); &#125; error:^(RCConnectErrorCode status) &#123; NSLog(@"登陆的错误码为:%ld", (long)status); &#125; tokenIncorrect:^&#123; //token过期或者不正确。 //如果设置了token有效期并且token过期，请重新请求您的服务器获取新的token //如果没有设置token有效期却提示token错误，请检查您客户端和服务器的appkey是否匹配，还有检查您获取token的流程。 NSLog(@"token错误"); &#125;]; &#125;- (void)registerNotificationOnApplication:(UIApplication *)application &#123; if ([[UIDevice currentDevice].systemVersion floatValue] &gt;= 10.0) &#123; //iOS10特有 UNUserNotificationCenter *center = [UNUserNotificationCenter currentNotificationCenter]; // 必须写代理，不然无法监听通知的接收与点击 center.delegate = self; [center requestAuthorizationWithOptions:(UNAuthorizationOptionAlert | UNAuthorizationOptionBadge | UNAuthorizationOptionSound) completionHandler:^(BOOL granted, NSError * _Nullable error) &#123; if (granted) &#123; // 点击允许通知 NSLog(@"注册成功"); [center getNotificationSettingsWithCompletionHandler:^(UNNotificationSettings * _Nonnull settings) &#123; NSLog(@"%@", settings); &#125;]; &#125; else &#123; // 点击不允许 NSLog(@"注册失败"); &#125; &#125;]; &#125; else if ([[UIDevice currentDevice].systemVersion floatValue] &gt;8.0) &#123; //iOS8 - iOS10 [application registerUserNotificationSettings:[UIUserNotificationSettings settingsForTypes:UIUserNotificationTypeAlert | UIUserNotificationTypeSound | UIUserNotificationTypeBadge categories:nil]]; &#125; else if ([[UIDevice currentDevice].systemVersion floatValue] &lt; 8.0) &#123; //iOS8系统以下 [application registerForRemoteNotificationTypes:UIRemoteNotificationTypeBadge | UIRemoteNotificationTypeAlert | UIRemoteNotificationTypeSound]; &#125; [self timeNotificationTest]; // 注册获得device Token [[UIApplication sharedApplication] registerForRemoteNotifications];&#125;// 测试本地时间通知- (void)timeNotificationTest &#123; // 1、创建通知内容，注：这里得用可变类型的UNMutableNotificationContent，否则内容的属性是只读的 UNMutableNotificationContent *content = [[UNMutableNotificationContent alloc] init]; // 标题 content.title = @"柯梵通知"; // 次标题 content.subtitle = @"柯梵办公室通知"; // 内容 content.body = @"柯梵科技是一家以人为本，具有强烈社会责任感的公司。公司的最大愿景就是每个员工都能住上大房子，开上好车，实现逆袭高富帅、白富美的愿望。"; // self.badge++; // app显示通知数量的角标 content.badge = @(9); // 通知的提示声音，这里用的默认的声音 content.sound = [UNNotificationSound defaultSound]; NSURL *imageUrl = [[NSBundle mainBundle] URLForResource:@"Leaf" withExtension:@"jpg"]; imageUrl = [NSURL fileURLWithPath:[[NSBundle mainBundle] pathForResource:@"Leaf.jpg" ofType:nil]]; UNNotificationAttachment *attachment = [UNNotificationAttachment attachmentWithIdentifier:@"imageIndetifier" URL:imageUrl options:nil error:nil]; // 附件 可以是音频、图片、视频 这里是一张图片 content.attachments = @[attachment]; // 标识符 content.categoryIdentifier = @"categoryIndentifier"; // 2、创建通知触发 /* 触发器分三种： UNTimeIntervalNotificationTrigger : 在一定时间后触发，如果设置重复的话，timeInterval不能小于60 UNCalendarNotificationTrigger : 在某天某时触发，可重复 UNLocationNotificationTrigger : 进入或离开某个地理区域时触发 */ UNTimeIntervalNotificationTrigger *trigger = [UNTimeIntervalNotificationTrigger triggerWithTimeInterval:7 repeats:NO]; //在每周一的16点3分提醒 NSDateComponents *components = [[NSDateComponents alloc] init]; components.weekday = 2; components.hour = 16; components.minute = 3; // components 日期 UNCalendarNotificationTrigger *calendarTrigger = [UNCalendarNotificationTrigger triggerWithDateMatchingComponents:components repeats:YES]; [[UNUserNotificationCenter currentNotificationCenter] setNotificationCategories:[self createNotificationCategoryActions]]; // 3、创建通知请求 UNNotificationRequest *notificationRequest = [UNNotificationRequest requestWithIdentifier:@"KFGroupNotification" content:content trigger:trigger]; // 4、将请求加入通知中心 [[UNUserNotificationCenter currentNotificationCenter] addNotificationRequest:notificationRequest withCompletionHandler:^(NSError * _Nullable error) &#123; if (error == nil) &#123; NSLog(@"已成功加推送：%@",notificationRequest.identifier); &#125; &#125;];&#125;// 获得Device Token- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken &#123; /// Required - 注册 DeviceToken [JPUSHService registerDeviceToken:deviceToken]; // &lt;724e4406 f3c3e15b ee88587b e5c0db16 96c917d4 ab769fb5 b725e68f cc5700ca&gt; NSLog(@"%@", [NSString stringWithFormat:@"Device Token: %@", deviceToken]);&#125;// 获得Device Token失败- (void)application:(UIApplication *)applicationdidFailToRegisterForRemoteNotificationsWithError:(NSError *)error &#123; NSLog(@"did Fail To Register For Remote Notifications With Error: %@", error);&#125;// iOS 10收到通知，如果在想应用内展示通知 （如果不想在应用内展示，可以不实现这个方法）- (void)userNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(void (^)(UNNotificationPresentationOptions options))completionHandler &#123; NSDictionary * userInfo = notification.request.content.userInfo; UNNotificationRequest *request = notification.request; // 收到推送的请求 UNNotificationContent *content = request.content; // 收到推送的消息内容 NSNumber *badge = content.badge; // 推送消息的角标 NSString *body = content.body; // 推送消息体 UNNotificationSound *sound = content.sound; // 推送消息的声音 NSString *subtitle = content.subtitle; // 推送消息的副标题 NSString *title = content.title; // 推送消息的标题 if([notification.request.trigger isKindOfClass:[UNPushNotificationTrigger class]]) &#123; NSLog(@"iOS10 前台收到远程通知:%@", userInfo); &#125; else &#123; // 判断为本地通知 NSLog(@"iOS10 前台收到本地通知:&#123;\\\\nbody:%@，\\\\ntitle:%@,\\\\nsubtitle:%@,\\\\nbadge：%@，\\\\nsound：%@，\\\\nuserInfo：%@\\\\n&#125;",body,title,subtitle,badge,sound,userInfo); &#125; NSLog(@"center: %@, current: %@",center,[UNUserNotificationCenter currentNotificationCenter]); [[UNUserNotificationCenter currentNotificationCenter] setNotificationCategories:[self createNotificationCategoryActions]]; // Required if([notification.request.trigger isKindOfClass:[UNPushNotificationTrigger class]]) &#123; [JPUSHService handleRemoteNotification:userInfo]; &#125; // 需要执行这个方法，选择是否提醒用户，有Badge、Sound、Alert三种类型可以设置 completionHandler(UNNotificationPresentationOptionBadge | UNNotificationPresentationOptionSound | UNNotificationPresentationOptionAlert);&#125;- (void)didReceiveNotification:(UNNotification *)notification &#123; &#125;// 通知的点击事件- (void)userNotificationCenter:(UNUserNotificationCenter *)center didReceiveNotificationResponse:(UNNotificationResponse *)response withCompletionHandler:(void(^)())completionHandler &#123; NSDictionary * userInfo = response.notification.request.content.userInfo; UNNotificationRequest *request = response.notification.request; // 收到推送的请求 UNNotificationContent *content = request.content; // 收到推送的消息内容 NSNumber *badge = content.badge; // 推送消息的角标 NSString *body = content.body; // 推送消息体 UNNotificationSound *sound = content.sound; // 推送消息的声音 NSString *subtitle = content.subtitle; // 推送消息的副标题 NSString *title = content.title; // 推送消息的标题 if ([response.actionIdentifier isEqualToString:@"see1"]) &#123; //I love it~的处理 &#125; if ([response.actionIdentifier isEqualToString:@"see2"]) &#123; //I don't care~ [[UNUserNotificationCenter currentNotificationCenter] removeDeliveredNotificationsWithIdentifiers:@[response.notification.request.identifier]]; &#125; if ([response.actionIdentifier isEqualToString:@"text"]) &#123; &#125; if([response.notification.request.trigger isKindOfClass:[UNPushNotificationTrigger class]]) &#123; NSLog(@"iOS10 收到远程通知:%@", userInfo); &#125; else &#123; // 判断为本地通知 NSLog(@"iOS10 收到本地通知:&#123;\\\\nbody:%@，\\\\ntitle:%@,\\\\nsubtitle:%@,\\\\nbadge：%@，\\\\nsound：%@，\\\\nuserInfo：%@\\\\n&#125;",body,title,subtitle,badge,sound,userInfo); &#125; // Required if([response.notification.request.trigger isKindOfClass:[UNPushNotificationTrigger class]]) &#123; [JPUSHService handleRemoteNotification:userInfo]; &#125; completionHandler(); // 系统要求执行这个方法 🍃 // http://www.cnblogs.com/oc-bowen/p/6061280.html // 风葉子 星夜飘零的风叶子 止步不前的龃龉 麻仓子叶 木叶夕阳 暮色夕阳 fenng 云岚的风叶子🍃 岚风的叶子🍃 岚山风叶子木 星夜云岚一叶风 潇湘夜雨冷从今&#125;- (NSSet *)createNotificationCategoryActions &#123; //定义按钮的交互button action UNNotificationAction * likeButton = [UNNotificationAction actionWithIdentifier:@"see1" title:@"I love it~" options:UNNotificationActionOptionDestructive|UNNotificationActionOptionForeground]; UNNotificationAction * dislikeButton = [UNNotificationAction actionWithIdentifier:@"see2" title:@"I don't care~" options:UNNotificationActionOptionAuthenticationRequired|UNNotificationActionOptionDestructive|UNNotificationActionOptionForeground]; //定义文本框的action UNTextInputNotificationAction * text = [UNTextInputNotificationAction actionWithIdentifier:@"text" title:@"How about it~?" options:UNNotificationActionOptionDestructive|UNNotificationActionOptionForeground]; //将这些action带入category UNNotificationCategory * choseCategory = [UNNotificationCategory categoryWithIdentifier:@"seeCategory" actions:@[likeButton,dislikeButton] intentIdentifiers:@[@"see1",@"see2"] options:UNNotificationCategoryOptionCustomDismissAction]; UNNotificationCategory * comment = [UNNotificationCategory categoryWithIdentifier:@"seeCategory1" actions:@[text] intentIdentifiers:@[@"text"] options:UNNotificationCategoryOptionNone]; return [NSSet setWithObjects:choseCategory,comment,nil];&#125;- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo &#123; [JPUSHService handleRemoteNotification:userInfo]; NSLog(@"iOS6及以下系统，收到通知:%@", userInfo);&#125;- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)userInfo fetchCompletionHandler: (void (^)(UIBackgroundFetchResult))completionHandler &#123; NSLog(@"iOS7及以上系统，收到通知:%@", userInfo); [JPUSHService handleRemoteNotification:userInfo]; completionHandler(UIBackgroundFetchResultNewData);&#125;// 注册后直接登录- (void)registerLogin &#123; UXUserInfo * user = [NSKeyedUnarchiver unarchiveObjectWithFile:KUserFile]; if (!user.isLogin) &#123; return; &#125; NSString * token = [NSString stringWithFormat:@"%@_%@",user.mid,user.access_token]; NSDictionary * para = [NSDictionary dictionaryWithObjectsAndKeys:user.mid,@"mid",token,@"access_token", nil]; [[WFRequestManager shareManager] postWithUrlString:KRegisterLogin parameters:para result:^(id dic, NSError * error) &#123; if (dic &amp;&amp; !error) &#123; user.isLogin = YES; user.nickName = dic[@"data"][@"nickName"]; user.headImg = dic[@"data"][@"headImg"]; user.cloudToken = dic[@"data"][@"cloudToken"]; NSLog(@"cloudToken %@", user.cloudToken); [[SDWebImageManager sharedManager] loadImageWithURL:[NSURL URLWithString:user.headImg] options:SDWebImageRetryFailed progress:nil completed:^(UIImage * _Nullable image, NSData * _Nullable data, NSError * _Nullable error, SDImageCacheType cacheType, BOOL finished, NSURL * _Nullable imageURL) &#123; user.avatarImg = image; NSLog(@"-- login: %d",user.isLogin); [NSKeyedArchiver archiveRootObject:user toFile:KUserFile]; &#125;]; [self configRongYunSDK]; &#125; else &#123; [self configRongYunSDK]; &#125; NSLog(@"--- ret: %@",[dic objectForKey:@"result"][@"msg"]); &#125;];&#125;/*! 获取用户信息 @param userId 用户ID @param completion 获取用户信息完成之后需要执行的Block [userInfo:该用户ID对应的用户信息] @discussion SDK通过此方法获取用户信息并显示，请在completion中返回该用户ID对应的用户信息。 在您设置了用户信息提供者之后，SDK在需要显示用户信息的时候，会调用此方法，向您请求用户信息用于显示。 */- (void)getUserInfoWithUserId:(NSString *)userId completion:(void (^)(RCUserInfo *userInfo))completion&#123; UXUserInfo * user = [NSKeyedUnarchiver unarchiveObjectWithFile:KUserFile]; NSLog(@"--- userId: %@",userId); if ([userId isEqualToString:user.mid]) &#123; RCUserInfo * userInfo = [[RCUserInfo alloc] init]; userInfo.userId = userId; userInfo.name = user.nickName; userInfo.portraitUri = user.headImg; return completion(userInfo); &#125; if ([userId isEqualToString:@"13397671157"]) &#123; RCUserInfo * userInfo = [[RCUserInfo alloc] init]; userInfo.userId = userId; userInfo.name = @"和上帝掷骰子"; userInfo.portraitUri = @"http://ww1.sinaimg.cn/thumb150/0069TUQujw8f40m60rxrej30e80e8dgb.jpg"; return completion(userInfo); &#125; if ([userId isEqualToString:@"Youki"]) &#123; RCUserInfo * userInfo = [[RCUserInfo alloc] init]; userInfo.userId = userId; userInfo.name = @"Youki"; userInfo.portraitUri = @"http://ww1.sinaimg.cn/thumb150/0069TUQujw8f40m60rxrej30e80e8dgb.jpg"; return completion(userInfo); &#125; if ([userId isEqualToString:@"729"]) &#123; RCUserInfo * userInfo = [[RCUserInfo alloc] init]; userInfo.userId = userId; userInfo.name = @"渐黄昏"; userInfo.portraitUri = @"http://ww1.sinaimg.cn/mw690/0069TUQugw1fa81keqfiuj30ku0rsacs.jpg"; return completion(userInfo); &#125; if ([userId isEqualToString:@"1"]) &#123; RCUserInfo * userInfo = [[RCUserInfo alloc] init]; userInfo.userId = userId; userInfo.name = @"系统消息"; userInfo.portraitUri = @"http://ww3.sinaimg.cn/mw690/0069TUQugw1f9qqkxql01j30qo0zkn2r.jpg"; return completion(userInfo); &#125; RCUserInfo * userInfo = [[RCUserInfo alloc] init]; userInfo.userId = userId; userInfo.name = [NSString stringWithFormat:@"name_%@",userId]; // userInfo.portraitUri = user.headImg; return completion(userInfo); // return completion(nil);&#125;//接收消息的回调方法- (void)onRCIMReceiveMessage:(RCMessage *)message left:(int)left&#123; NSLog(@"-- receive message: %@(%@) %@ ",message.targetId,message.senderUserId,message.content); RCTextMessage *txtMsg = (RCTextMessage*)message.content; NSLog(@"new text: %@",txtMsg); [[NSNotificationCenter defaultCenter] postNotificationName:@"newMessage" object:@1]; &#125;// 查询用户位置授权- (void)initCLLocationManager&#123; //定位服务是否可用 BOOL enable = [CLLocationManager locationServicesEnabled]; //是否具有定位权限 int status = [CLLocationManager authorizationStatus]; if(!enable || status &lt; 3) &#123; //请求权限 if ([[UIDevice currentDevice].systemVersion floatValue] &gt;= 8) &#123; //由于IOS8中定位的授权机制改变 需要进行手动授权 CLLocationManager *locationManager = [[CLLocationManager alloc] init]; //获取授权认证 [locationManager requestAlwaysAuthorization]; [locationManager requestWhenInUseAuthorization]; &#125; UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:nil message:@"无法定位到您所在的城市，请前去开启GPS定位" delegate:self cancelButtonTitle:nil otherButtonTitles:@"取消",@"去设置", nil]; alertView.tag = 1000; [alertView show]; &#125;&#125;#pragma mark -- UIAlertViewDelegate- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex&#123; if (buttonIndex == 0) &#123; &#125; else &#123; [self jumpSetting]; &#125;&#125;- (void)jumpSetting&#123; //打开设置页面，去设置定位 NSURL *url = [NSURL URLWithString:UIApplicationOpenSettingsURLString]; if ([[UIApplication sharedApplication] canOpenURL:url]) &#123; [[UIApplication sharedApplication] openURL:url]; &#125;&#125;- (void)applicationWillResignActive:(UIApplication *)application &#123; // Sent when the application is about to move from active to inactive state. This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message) or when the user quits the application and it begins the transition to the background state. // Use this method to pause ongoing tasks, disable timers, and invalidate graphics rendering callbacks. Games should use this method to pause the game.&#125;- (void)applicationDidEnterBackground:(UIApplication *)application &#123; // Use this method to release shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later. // If your application supports background execution, this method is called instead of applicationWillTerminate: when the user quits.&#125;- (void)applicationWillEnterForeground:(UIApplication *)application &#123; // Called as part of the transition from the background to the active state; here you can undo many of the changes made on entering the background.&#125;- (void)applicationDidBecomeActive:(UIApplication *)application &#123; // Restart any tasks that were paused (or not yet started) while the application was inactive. If the application was previously in the background, optionally refresh the user interface.&#125;- (void)applicationWillTerminate:(UIApplication *)application &#123; // Called when the application is about to terminate. Save data if appropriate. See also applicationDidEnterBackground:.&#125;@end]]></content>
  </entry>
  <entry>
    <title><![CDATA[test]]></title>
    <url>%2F2017%2F07%2F19%2Ftest%2F</url>
    <content type="text"><![CDATA[十五年前阴凉的晨 恍恍惚惚清晰的诀别 每夜，梦中的你梦中是你 与枕俱醒觉得不是你 另一些人扮演你入我梦中 哪有你，你这样好哪有你这样你 —— 木心 1234567891011121314151617181920212223242526272829303132333435//// MPUtilities.m// MacDown//// Created by Tzu-ping Chung on 8/06/2014.// Copyright (c) 2014 Tzu-ping Chung . All rights reserved.//#import &quot;MPUtilities.h&quot;#import &quot;NSString+Lookup.h&quot;#import &lt;JavaScriptCore/JavaScriptCore.h&gt;NSString * const kMPStylesDirectoryName = @&quot;Styles&quot;;NSString * const kMPStyleFileExtension = @&quot;css&quot;;NSString * const kMPThemesDirectoryName = @&quot;Themes&quot;;NSString * const kMPThemeFileExtension = @&quot;style&quot;;NSString * const kMPPlugInsDirectoryName = @&quot;PlugIns&quot;;NSString * const kMPPlugInFileExtension = @&quot;plugin&quot;;static NSString *MPDataRootDirectory()&#123; static NSString *path = nil; if (!path) &#123; NSArray *paths = NSSearchPathForDirectoriesInDomains(NSApplicationSupportDirectory, NSUserDomainMask, YES); NSCAssert(paths.count &gt; 0, @&quot;Cannot find directory for NSApplicationSupportDirectory.&quot;); NSDictionary *infoDictionary = [NSBundle mainBundle].infoDictionary; path = [NSString pathWithComponents:@[paths[0], infoDictionary[@&quot;CFBundleName&quot;]]]; &#125; return path;&#125; ddddddd]]></content>
  </entry>
  <entry>
    <title><![CDATA[ibook]]></title>
    <url>%2F2017%2F07%2F18%2Fibook%2F</url>
    <content type="text"><![CDATA[123456789101112131415&lt;!-- JiaThis Button BEGIN --&gt;&lt;div class="jiathis_style_24x24"&gt; &lt;a class="jiathis_button_qzone"&gt;&lt;/a&gt; &lt;a class="jiathis_button_tsina"&gt;&lt;/a&gt; &lt;a class="jiathis_button_tqq"&gt;&lt;/a&gt; &lt;a class="jiathis_button_weixin"&gt;&lt;/a&gt; &lt;a class="jiathis_button_renren"&gt;&lt;/a&gt; &lt;a href="http://www.jiathis.com/share?uid=2139285" class="jiathis jiathis_txt jtico jtico_jiathis" target="_blank"&gt;&lt;/a&gt; &lt;a class="jiathis_counter_style"&gt;&lt;/a&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;var jiathis_config = &#123;data_track_clickback:'true'&#125;;&lt;/script&gt;&lt;script type="text/javascript" src="http://v3.jiathis.com/code/jia.js?uid=2139285" charset="utf-8"&gt;&lt;/script&gt;&lt;!-- JiaThis Button END --&gt;]]></content>
      <categories>
        <category>iBook</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[戏子]]></title>
    <url>%2F2017%2F07%2F15%2F%E6%88%8F%E5%AD%90%2F</url>
    <content type="text"><![CDATA[1234567891011请不要相信我的美丽也不要相信我的爱情在涂满了油彩的面容之下我有的是颗戏子的心所以 请千万不要不要把我的悲哀当真也别随着我的表演心碎亲爱的朋友 今生今世我只是个戏子永远在别人的故事里流着自己的泪 this is a basic footnote[1] blah blah blah blah blah blah blah blah blah 图片居中 111222333444555666777888 aaa bbb ccc ddd eee 1234567891011121314151617181920212223242526272829303132333435//// MPUtilities.m// MacDown//// Created by Tzu-ping Chung on 8/06/2014.// Copyright (c) 2014 Tzu-ping Chung . All rights reserved.//#import &quot;MPUtilities.h&quot;#import &quot;NSString+Lookup.h&quot;#import &lt;JavaScriptCore/JavaScriptCore.h&gt;NSString * const kMPStylesDirectoryName = @&quot;Styles&quot;;NSString * const kMPStyleFileExtension = @&quot;css&quot;;NSString * const kMPThemesDirectoryName = @&quot;Themes&quot;;NSString * const kMPThemeFileExtension = @&quot;style&quot;;NSString * const kMPPlugInsDirectoryName = @&quot;PlugIns&quot;;NSString * const kMPPlugInFileExtension = @&quot;plugin&quot;;static NSString *MPDataRootDirectory()&#123; static NSString *path = nil; if (!path) &#123; NSArray *paths = NSSearchPathForDirectoriesInDomains(NSApplicationSupportDirectory, NSUserDomainMask, YES); NSCAssert(paths.count &gt; 0, @&quot;Cannot find directory for NSApplicationSupportDirectory.&quot;); NSDictionary *infoDictionary = [NSBundle mainBundle].infoDictionary; path = [NSString pathWithComponents:@[paths[0], infoDictionary[@&quot;CFBundleName&quot;]]]; &#125; return path;&#125; 123456789101112131415&lt;!-- JiaThis Button BEGIN --&gt;&lt;div class="jiathis_style_24x24"&gt; &lt;a class="jiathis_button_qzone"&gt;&lt;/a&gt; &lt;a class="jiathis_button_tsina"&gt;&lt;/a&gt; &lt;a class="jiathis_button_tqq"&gt;&lt;/a&gt; &lt;a class="jiathis_button_weixin"&gt;&lt;/a&gt; &lt;a class="jiathis_button_renren"&gt;&lt;/a&gt; &lt;a href="http://www.jiathis.com/share?uid=2139285" class="jiathis jiathis_txt jtico jtico_jiathis" target="_blank"&gt;&lt;/a&gt; &lt;a class="jiathis_counter_style"&gt;&lt;/a&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;var jiathis_config = &#123;data_track_clickback:'true'&#125;;&lt;/script&gt;&lt;script type="text/javascript" src="http://v3.jiathis.com/code/jia.js?uid=2139285" charset="utf-8"&gt;&lt;/script&gt;&lt;!-- JiaThis Button END --&gt; 888 fff ggg 1.basic footnote content ↩]]></content>
      <categories>
        <category>随笔</category>
        <category>瞬间</category>
      </categories>
      <tags>
        <tag>test</tag>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[White Album]]></title>
    <url>%2F2017%2F07%2F15%2FWhite-Album%2F</url>
    <content type="text"><![CDATA[冬天的相簿总是如此洁白，让人心中不适。冬日的街道，寒冷的风中，传来的歌声使人停住了脚步。屏幕中，她在那头唱着歌，他在这头静静地看着。冬季里的风，在他回大学的路上，一直吹着。对他来说，这样的风，一直都是普通的。至少，到现在为止，她过着她特别的生活，他过着他普通的生活。他们没有一起被卷进什么事件中，自己过着自己的日子。被如同寒冬一样白色相簿点缀的故事，无论什么时候，都在这里——]]></content>
  </entry>
  <entry>
    <title><![CDATA[送别]]></title>
    <url>%2F2017%2F07%2F15%2F%E9%80%81%E5%88%AB%2F</url>
    <content type="text"><![CDATA[不是所有的梦都来得及实现不是所有的话都来得及告诉你内疚和悔恨总要深深地种植在离别後的心中尽管他们说 世间种种最後终必成空我并不是立意要错过可是我 一直都在这样做错过那花满枝桠的昨日又要错过今朝今朝 仍要重复那相同的别离馀生将成陌路一去千里在暮霭里向你深深地俯首请为我珍重尽管他们说 世间种种最後终必 终必成空 —— 席慕蓉]]></content>
      <categories>
        <category>诗和远方</category>
        <category>iBook</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[青春]]></title>
    <url>%2F2017%2F07%2F15%2F%E9%9D%92%E6%98%A5%2F</url>
    <content type="text"><![CDATA[所有的结局都已写好所有的泪水也都已启程却忽然忘了是怎麽样的一个开始在那个古老的不再回来的夏日无论我如何地去追索年轻的你只如云影掠过而你微笑的面容极浅极淡逐渐隐没在日落後的群岚遂翻开那发黄的扉页命运将它装订得极为拙劣含著泪 我一读再读却不得不承认青春是一本太仓促的书 —— 席慕蓉 12时光不会倒着走，我也不会再回头流水若是会回头，落花亦会再驻留 123456789101112// Custom styles.// 为next主题的主页文章添加阴影效果.post &#123; margin-top: 30px; margin-bottom: 30px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(76, 76, 76, .5); -moz-box-shadow: 0 0 5px rgba(76, 76, 76, .5); &#125; 123int main(void) &#123; return "123"; //ddddd&#125; 123456789101112131415161718int main(void) &#123; return "123"; //ddddd&#125;int main(void) &#123; return "123"; //ddddd&#125;int main(void) &#123; return "123"; //ddddd&#125;int main(void) &#123; return "123"; //ddddd&#125;int main(void) &#123; return "123"; //ddddd&#125;int main(void) &#123; return "123"; //ddddd&#125; 12345678910public static Picasso with(Context context) &#123; if (singleton == null) &#123; synchronized (Picasso.class) &#123; if (singleton == null) &#123; singleton = new Builder(context).build(); &#125; &#125; &#125; return singleton;&#125; 123456@implementation QNFileRecorder+ (NSString *)pathJoin:(NSString *)key path:(NSString *)path &#123; return [[NSString alloc] initWithFormat:@"%@/%@", path, key];&#125; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798// QNFileRecorder.m// QiniuSDK//// Created by bailong on 14/10/5.// Copyright (c) 2014年 Qiniu. All rights reserved.//#import "QNFileRecorder.h"#import "QNUrlSafeBase64.h"@interface QNFileRecorder ()@property (copy, readonly) NSString *directory;@property BOOL encode;@end@implementation QNFileRecorder- (NSString *)pathOfKey:(NSString *)key &#123; return [QNFileRecorder pathJoin:key path:_directory];&#125;+ (NSString *)pathJoin:(NSString *)key path:(NSString *)path &#123; return [[NSString alloc] initWithFormat:@"%@/%@", path, key];&#125;+ (instancetype)fileRecorderWithFolder:(NSString *)directory error:(NSError *__autoreleasing *)perror &#123; return [QNFileRecorder fileRecorderWithFolder:directory encodeKey:false error:perror];&#125;+ (instancetype)fileRecorderWithFolder:(NSString *)directory encodeKey:(BOOL)encode error:(NSError *__autoreleasing *)perror &#123; NSError *error; [[NSFileManager defaultManager] createDirectoryAtPath:directory withIntermediateDirectories:YES attributes:nil error:&amp;error]; if (error != nil) &#123; if (perror) &#123; *perror = error; &#125; return nil; &#125; return [[QNFileRecorder alloc] initWithFolder:directory encodeKey:encode];&#125;- (instancetype)initWithFolder:(NSString *)directory encodeKey:(BOOL)encode &#123; if (self = [super init]) &#123; _directory = directory; _encode = encode; &#125; return self;&#125;- (NSError *)set:(NSString *)key data:(NSData *)value &#123; NSError *error; if (_encode) &#123; key = [QNUrlSafeBase64 encodeString:key]; &#125; [value writeToFile:[self pathOfKey:key] options:NSDataWritingAtomic error:&amp;error]; return error;&#125;- (NSData *)get:(NSString *)key &#123; if (_encode) &#123; key = [QNUrlSafeBase64 encodeString:key]; &#125; return [NSData dataWithContentsOfFile:[self pathOfKey:key]];&#125;- (NSError *)del:(NSString *)key &#123; NSError *error; if (_encode) &#123; key = [QNUrlSafeBase64 encodeString:key]; &#125; [[NSFileManager defaultManager] removeItemAtPath:[self pathOfKey:key] error:&amp;error]; return error;&#125;+ (void)removeKey:(NSString *)key directory:(NSString *)dir encodeKey:(BOOL)encode &#123; if (encode) &#123; key = [QNUrlSafeBase64 encodeString:key]; &#125; NSError *error; NSString *path = [QNFileRecorder pathJoin:key path:dir]; [[NSFileManager defaultManager] removeItemAtPath:path error:&amp;error];&#125;- (NSString *)description &#123; return [NSString stringWithFormat:@"&lt;%@: %p, dir: %@&gt;", NSStringFromClass([self class]), self, _directory];&#125;@end]]></content>
      <tags>
        <tag>诗和远方</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[渡口]]></title>
    <url>%2F2017%2F07%2F15%2F%E6%B8%A1%E5%8F%A3%2F</url>
    <content type="text"><![CDATA[让我与你握别再轻轻抽出我的手知道思念从此生根浮云白日 山川庄严温柔让我与你握别再轻轻抽出我的手华年从此停顿热泪在心中汇成河流是那样万般无奈的凝视渡口旁找不到一朵可以相送的花就把祝福别在襟上吧而明日明日又隔天涯 —— 北岛]]></content>
  </entry>
  <entry>
    <title><![CDATA[雨之语]]></title>
    <url>%2F2017%2F07%2F15%2F%E9%9B%A8%E4%B9%8B%E8%AF%AD%2F</url>
    <content type="text"><![CDATA[我感到有些冷 因为我在蒙蒙细雨中 独自前行 我的手心和额头都湿了 不知何时起 我变得阴暗 似乎只要一直倚靠在这里 就能等来光明 外面的无声细雨 向我倾诉着一天之中 不曾获知 也不曾期待的琐事 静寂与燥热的白天 都在雨滴的细语中悄然改变 我听着这些声音 不知何时 又像平时一样入睡了]]></content>
  </entry>
  <entry>
    <title><![CDATA[关于历史]]></title>
    <url>%2F2017%2F07%2F15%2F%E5%85%B3%E4%BA%8E%E5%8E%86%E5%8F%B2%2F</url>
    <content type="text"><![CDATA[当年明月结束语： 很多人问，为什么看历史，很多人回答，以史为鉴。现在我来告诉你，以史为鉴，是不可能的。因为我发现，其实历史没有变化，技术变了，衣服变了，饮食变了，这都是外壳，里面什么都没变化，还是几千年前那一套，转来转去，该犯的错误还是要犯，该杀的人还是要杀，岳飞会死，袁崇焕会死，再过一千年，还是会死。所有发生的，是因为它有发生的理由，能超越历史的人，才叫以史为鉴，然而我们终究不能超越，因为我们自己的欲望和弱点。所有的错误，我们都知道，然而终究改不掉。能改的，叫做缺点，不能改的，叫做弱点。顺便说下，能超越历史的人，还是有的，我们管这种人，叫做圣人。因为看得历史比较多，所以我这个人比较有历史感，当然，这是文明的说法，粗点讲，就是悲观。这并非开玩笑，我本人虽然经常幽默幽默，但对很多事情都很悲观，因为我经常看历史（就好比很多人看电视剧一样），不同的是，我看到的那些古文中，只有悲剧结局，无一例外。每一个人，他的飞黄腾达和他的没落，对他本人而言，是几十年，而对我而言，只有几页，前一页他很牛，后一页就怂了。王朝也是如此。真没意思，没意思透了。但我坚持幽默，是因为我明白，无论这个世界有多绝望，你自己都要充满希望。 我们每个人都有自己的人性、欲望和弱点，只要摆脱不了，超脱不了，那么就回陷入历史的轮回中。我们这些人弱点可能就是太重情义太正直了吧……]]></content>
  </entry>
  <entry>
    <title><![CDATA[西厢记]]></title>
    <url>%2F2017%2F07%2F15%2F%E8%A5%BF%E5%8E%A2%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[秋波一转成姻缘──崔莺莺的求爱之路《西厢记》之所以成为经典，就在于它一反以往“痴心女子负心汉”的故事线，通过塑造机灵聪颖的丫头红娘、大胆求爱的深闺小姐莺莺、痴心一片的书生张珙，最后求得个“天下有情人终成眷属”的大团圆结局。这样一份不被礼教不被世人所看好的爱情，其结局却如此圆满，不得不说对于当时的人们来说是一种莫大的冲击与震撼。官府禁而不止，民间争相誊写传阅，则一定程度上反应了人们对于伦理纲常禁锢情欲的挣脱之愿望，也体现了民间对于美好自由爱情的向往与追求。 作品中塑造最成功的人物形象，在我看来，莫过于是这位深闺小姐──崔莺莺。故事的开头之处，往往为读者所津津乐道的，大概是张生那句突兀的自我介绍：“小生姓张，名珙，字君瑞，本贯西洛人也。年方二十三岁，正月十七日子时建生。并不曾娶妻。”一见到红娘便自报生辰八字，明摆着是有与崔莺莺婚配之意。对于一个深谙儒学礼法的书生来说，这一举动着实可笑，难怪红娘要用“男女授受不亲”、“非礼勿视，非礼勿听，非礼勿言，非礼勿动”等来嘲笑他一番。而张生之所以如此鲁莽，并非只是自己一厢热忱。乃是与莺莺在寺庙大殿初见，莺莺临走时“怎当她，临走秋波那一转。”只一眼，那秋波便如同一道闪电，不偏不倚，正击中了张生的心扉。由此，正是年轻气盛的张生，体内的荷尔蒙再也按捺不住，全身每一个毛孔，喷薄的都是对莺莺的思念和爱恋，也难怪他举止如此轻薄。从小家教甚严的莺莺，本是连被陌生男子看一眼也要觉得羞耻，在遇到张生时，竟然还主动回头看了一眼。这一回眸，是她反叛传统的开始，也是她追求爱情的开端。崔张的爱情之路走的并不顺畅，也正是在这一路过五关斩六将的求爱途中，莺莺的聪明智慧、勇敢果决，可见一斑。首先，她所追求是有情趣的生活。作为前相国之女，莺莺必定是知书达礼，文中也说莺莺“针黹女红，诗词书算，无不能者。”她还通音律。那晚隔墙听张生抚琴，久久不愿离开，想必是张生那曲《凤求凰》，挑动了她心中的情丝。那夜张生隔墙云：月色溶溶夜，花阴寂寂春。如何临皓魄，不见月中人？她便立刻对曰：兰闺久寂寞，无事度芳春。料得行吟者，应怜长叹人。再到后来写给张生的那帖深意难猜的“药方”，无一不体现了她对有情趣生活的追求。恰好，张生又是个心思细腻的书生，对她字中情句中意，解析的透彻。这为他们之间的互动提供了可能。倘若莺莺面对的是那个抢人的孙飞虎，或是一位只懂兵事的武将，即便她再有一腔意趣，无人能懂，也会在岁月的洪流中消磨了去，连她自己，也会被磨得没有了灵气，继而成为下一个像母亲那样循规蹈矩的封建夫权的附属品，或者是牺牲品。而这，并非是她所想要的生活。正所谓：有趣的灵魂碰撞在一起，才会产生有趣的生活。所以当莺莺碰到能够懂她的张生时，便一步步冲破礼教的束缚，奔着理想的爱情而去。其次，她相当聪明。且不说她与张生书信往来中的智慧，就平日里所为，也是聪伶毓秀。普救寺及时出谋划策谋求获救之法，小心应对郑恒逼婚，尽量与老夫人谨慎相处，不增其烦忧。最使我印象深刻的，该是“戏耍”张生那一回。“待月西厢下，迎风户半开。隔墙花影动，疑是玉人来。”病榻之上的张生一见此诗，病立马好了大半。度日如年等待夜晚的到来，甚至恨不得后羿能立马射掉那唯一的太阳才好。可到了晚上，一切却并未如想象的那样发生，张生自是心里有气说不出，只是病的更厉害。莺莺口头虽说要讲给老夫人听，倒并不会真那样做，而是假装托了红娘的情面才不与张生计较。这一折戏看似是一出闹剧，增添故事的趣味性。而于我看来，不如说这是聪明的莺莺对张生能否理解自己诗中意的试探。显然张生理解了，这才有了第二日“药方”的出现，崔张才得以能够近距离接触。莺莺这想要瞒住众人并且不显得自己轻浮的计策，不得不让人佩服。最后，也是最为重要的一点，莺莺十分勇敢果决。当初兵围普救寺，为救众人，她曾有过随孙飞虎去换得众人平安后自杀的念头，可谓是位烈女子。未婚便与张生有夫妻之实，是她最大胆的突破──不顾母亲反对，违逆纲常伦理。长亭送别，莺莺所盼乃是：“你休忧文齐福不齐，我则怕你停妻再娶妻。休要一春鱼雁无消息，我这里青鸾有信频须寄，你却休金榜无名誓不归。此一节君须记：若见了那异乡花草，再休似此处栖迟。”此之前，书生高中后抛弃原配者，大有人在，莺莺此番叮嘱，是对张生的期望。也是说给自己听，她该是给了自己多大的勇气才能放手丈夫赴京赶考。相比之下，尽管张生状元及第之后没有忘记莺莺另攀高枝，但是张生的行为中，总有一种束手束脚的拘谨束缚之感，反而像个女子。像“思念成疾”的戏码，一般都是发生在弱女子身上。张生此番思念成疾，一是为了推动故事的发展，再则，是为了突显莺莺的果敢与坚强。生在深闺的莺莺深深明白，想要的幸福需要自己争取，而非一味听取父母之命媒妁之言，任由家庭安排。那秋波一转，成就了她与张生的大好姻缘。求爱之路虽艰辛，但世事终究会成人之美。尽管她该是比较幸运的那一个，但我们不得不说，敢于努力追求自由爱情的有情人，才会有成为眷属的可能。这才是莺莺这一形象想要告诉世人的。]]></content>
  </entry>
  <entry>
    <title><![CDATA[光]]></title>
    <url>%2F2017%2F07%2F15%2F%E5%85%89%2F</url>
    <content type="text"><![CDATA[我想在大地上画满窗子让所有习惯黑暗的眼睛都习惯光明]]></content>
  </entry>
  <entry>
    <title><![CDATA[悟空传]]></title>
    <url>%2F2017%2F07%2F15%2F%E6%82%9F%E7%A9%BA%E4%BC%A0%2F</url>
    <content type="text"><![CDATA[每一夜，都要如此往复，说不清，是冷漠还是孤独。枕边还放着你离开我，留下的礼物，这一生我读过的最多的一本书。 我是谁，怎么一个人住，我从哪儿来？又要去向何处？好像我犯下过某一种，不能原谅的错误，总觉得有些什么要我背负。 每一夜，都要如此往复，说不清，是冷漠还是孤独。枕边还放着你离开我，留下的礼物，这一生我读过的最多的一本书。我要这天，再遮不住我的眼。我要这地，再埋不了我的心。我要那众生，都明白我的意。我要那诸佛，都烟消云散。 每一夜，都要如此往复，说不清，是冷漠还是孤独。枕边还放着你离开我，留下的礼物，这一生我读过的，最多的一本书。我要这天，再遮不住我的眼。我要这地，再埋不了我的心。我要那众生，都明白我的意。我要那诸佛，都烟消云散。我要这天，再遮不住我的眼。我要这地，再埋不了我的心。我要那众生，都明白我的意。我要那诸佛，都烟消云散。我要这天，再遮不住我的眼。我要这地，再埋不了我的心。我要那众生，都明白我的意。我要那诸佛，都烟消云散。我要那诸佛，都烟消云散！]]></content>
  </entry>
  <entry>
    <title><![CDATA[test note]]></title>
    <url>%2F2017%2F07%2F15%2Ftest-note%2F</url>
    <content type="text"><![CDATA[wang xunfengduanfenfen 1E = mc^2 [x] one 无序列表 duanfenfen luotingting longzhongmei girls one two 文字删除线 樱花落 one 1234123fdfdfdffdfdffdfadfad 注脚内容[^注脚内容] &#x77;&#x78;&#102;&#x37;&#50;&#x39;&#64;&#x69;&#99;&#x6c;&#x6f;&#x75;&#x64;&#x2e;&#99;&#111;&#x6d; http://www.jianshu.com 插入图片 插入连接这是一个连接 [link][http://b.hiphotos.baidu.com/baike/w%3D268%3Bg%3D0/sign=7260f21552afa40f3cc6c9db935f6472/adaf2edda3cc7cd98c8071fe3101213fb80e9163.jpg][1] 粗体 chuti 斜体 xieti 顶顶顶顶对对对对对对 我#import &quot;AppDelegate.h&quot; 123456789101112#import "AppDelegate.h"#import "MainViewController.h"@implementation AppDelegate- (BOOL)application:(UIApplication*)application didFinishLaunchingWithOptions:(NSDictionary*)launchOptions&#123;self.viewController = [[MainViewController alloc] init];return [super application:application didFinishLaunchingWithOptions:launchOptions];&#125;@end one two three duan luo long 1 2 3]]></content>
  </entry>
  <entry>
    <title><![CDATA[markdown 测试]]></title>
    <url>%2F2017%2F07%2F15%2Fmarkdown-%E6%B5%8B%E8%AF%95%2F</url>
    <content type="text"><![CDATA[欢迎使用 Cmd Markdown 编辑阅读器 我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，Cmd Markdown 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown： 整理知识，学习笔记 发布日记，杂文，所见所想 撰写发布技术文稿（代码支持） 撰写发布学术论文（LaTeX 公式支持） 除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载： Windows/Mac/Linux 全平台客户端 请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 新文稿 或者使用快捷键 Ctrl+Alt+N。 什么是 MarkdownMarkdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，粗体 或者 斜体 某些文字，更棒的是，它还可以 1. 制作一份待办事宜 Todo 列表 [ ] 支持以 PDF 格式导出文稿 [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率 [x] 新增 Todo 列表功能 [x] 修复 LaTex 公式渲染问题 [x] 新增 LaTex 公式编号功能 2. 书写一个质能守恒公式[^LaTeX]$$E=mc^2$$ 3. 高亮一段代码[^code]1234567@requires_authorizationclass SomeClass:passif __name__ == '__main__':# A commentprint 'hello world' 4. 高效绘制 流程图12345678st=&gt;start: Startop=&gt;operation: Your Operationcond=&gt;condition: Yes or No?e=&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op 5. 高效绘制 序列图123Alice-&gt;Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob--&gt;Alice: I am good thanks! 6. 高效绘制 甘特图12345678910111213title 项目开发流程section 项目确定需求分析 :a1, 2016-06-22, 3d可行性报告 :after a1, 5d概念验证 : 5dsection 项目实施概要设计 :2016-07-05 , 5d详细设计 :2016-07-08, 10d编码 :2016-07-15, 10d测试 :2016-07-22, 5dsection 发布验收发布: 2d验收: 3d 7. 绘制表格 项目 价格 数量 计算机 \$1600 5 手机 \$12 12 管线 \$1 234 8. 更详细语法说明想要查看更详细的语法说明，可以参考我们准备的 Cmd Markdown 简明语法手册，进阶用户可以参考 Cmd Markdown 高阶语法手册 了解更多高级功能。 总而言之，不同于其它 所见即所得 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。 什么是 Cmd Markdown您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 编辑/发布/阅读 Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。 1. 实时同步预览我们将 Cmd Markdown 的主界面一分为二，左边为编辑区，右边为预览区，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！ 2. 编辑工具栏也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 编辑区 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。 3. 编辑模式完全心无旁骛的方式编辑文字：点击 编辑工具栏 最右侧的拉伸按钮或者按下 Ctrl + M，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！ 4. 实时的云端文稿为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 编辑工具栏 的最右侧提示 已保存 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。 5. 离线模式在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。 6. 管理工具栏为了便于管理您的文稿，在 预览区 的顶部放置了如下所示的 管理工具栏： 通过管理工具栏可以： 发布：将当前的文稿生成固定链接，在网络上发布，分享 新建：开始撰写一篇新的文稿 删除：删除当前的文稿 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地 列表：所有新增和过往的文稿都可以在这里查看、操作 模式：切换 普通/Vim/Emacs 编辑模式 7. 阅读工具栏 通过 预览区 右上角的 阅读工具栏，可以查看当前文稿的目录并增强阅读体验。 工具栏上的五个图标依次为： 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落 视图：互换左边编辑区和右边预览区的位置 主题：内置了黑白两种模式的主题，试试 黑色主题，超炫！ 阅读：心无旁骛的阅读模式提供超一流的阅读体验 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境 8. 阅读模式在 阅读工具栏 点击 或者按下 Ctrl+Alt+M 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。 9. 标签、分类和搜索在编辑区任意行首位置输入以下格式的文字可以标签当前文档： 标签： 未分类 标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示： 10. 文稿发布和分享在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 (Ctrl+Alt+P) 发布这份文档给好友吧！ 再一次感谢您花费时间阅读这份欢迎稿，点击 (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！ 作者 @ghosert2016 年 07月 07日 [^LaTeX]: 支持 LaTeX 编辑显示支持，例如：$\sum_{i=1}^n a_i=0$， 访问 MathJax 参考更多使用方法。 [^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，四十一种主流编程语言。]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F07%2F15%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
